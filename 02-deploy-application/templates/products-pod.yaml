# products-pod.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: products
  namespace: {{ .Release.Namespace }}
  labels:
    app: products
    run: products

spec:
  replicas: {{ .Values.replicaCount }} # Number of pods to run # Evaluate whether to use hpa or not
  selector:
    matchLabels:
      app: products # Select pods with this label
      run: products
  template:
    metadata:
      labels:
        app: products # Label for the pods to match the service
        run: products
    spec:
      containers:
        - name: products
          image: "acrgenocs.azurecr.io/products:{{ .Values.imageTag.products }}" # The image name should be updated to the correct one
          env:
            - name: ASPNETCORE_ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Release.Name }}-configmap"
                  key: ASPNETCORE_ENVIRONMENT
            # RabbitMQ
            - name: rabbitmq__hostname
              value: {{ .Values.rabbitmq.hostname }}
            - name: rabbitmq__hostnames__0
              value: {{ .Values.rabbitmq.hostname }}
            - name: rabbitmq__virtualhost
              value: {{ .Values.rabbitmq.virtualhost }}
            - name: rabbitmq__username
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: RABBITMQ_USER_NAME
            - name: rabbitmq__password
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: RABBITMQ_PASSWORD

            # MongoDB
            - name: mongodb__connectionString
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: MONGODB_CONNECTION_STRING

          ports:
            - containerPort: 8080 # Port the container exposes

          volumeMounts:
            - name: products-config-volume
              mountPath: /app/config

          envFrom:
            - secretRef:
                name: "app-secrets"
          resources:
            requests:
              cpu: { { .Values.cpu_requests } } #50% of a core
              memory: { { .Values.memory_requests } }
            limits:
              cpu: { { .Values.cpu_limits } } #50% of a core
              memory: { { .Values.memory_limits } }
          imagePullPolicy: Always
      volumes:
        - name: products-config-volume
          persistentVolumeClaim:
            claimName: products-pvc
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      imagePullSecrets:
        - name: regcred
